//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : PSDE
//  @ File Name : CCoordinate.h
//  @ Date : 2010/12/20
//  @ Author : 
//
//


#if !defined(_CCOORDINATE_H)
#define _CCOORDINATE_H
#include <iosfwd>

#include "maths.h"

namespace Geometry {
class CCoordinate {
public:
	double x;
	double y;
	double z;
	double m;
public:

	CCoordinate(double x = 0.0, double y = 0.0, double z = DOUBLE_NAN, double m = DOUBLE_NAN);
	/**
	 * Constructor that get a deep copy from another CCoordinate
	 * @param c The source CCoordinate object
	 */
	CCoordinate(const CCoordinate & c);
	~CCoordinate();

public:
	inline bool equal2D(const CCoordinate & c) const;
	inline bool equal(const CCoordinate & c) const;
	inline double distance2D(const CCoordinate & c);
	inline void setNull();
	inline bool isNull() const;
	CCoordinate & operator=(const CCoordinate & c);

public:
	static CCoordinate nullCoord;
	static bool equalCCoordinate(const CCoordinate &a, const CCoordinate &b, double eps);
};
bool operator==(const CCoordinate &a, const CCoordinate &b);
bool operator!=(const CCoordinate &a, const CCoordinate &b);
std::ostream& operator<< (std::ostream& out, const CCoordinate& c);
}

#endif  //_CCOORDINATE_H
