//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : PSDE
//  @ File Name : CGeometry.cpp
//  @ Date : 2010/12/20
//  @ Author : 
//
//

#include <typeinfo>
#include <cstring>
#include "CEWKBReader.h"
#include "CGeometry.h"

namespace Geometry {
CGeometry::CGeometry() {
	mSRID = -1;
	HasM = HasZ = false;

}

CGeometry::CGeometry(const CGeometry & geom) {
	HasM = geom.HasM;
	HasZ = geom.HasZ;
	mSRID = geom.mSRID;

}
CGeometry::~CGeometry() {

}

int CGeometry::getSRID() const {
	return mSRID;
}

void CGeometry::setSRID(int newSRID) {
	mSRID = newSRID;
}
double CGeometry::distance(CGeometry* geom) const {
	// to be done
	return 0.00;
}
const CGeometry* CGeometry::getGeometryAt(size_t pos) const {
	return this;
}
CCoordinate CGeometry::getCoordinateAt(size_t pos) const {
	return CCoordinate();
}
bool CGeometry::isSimple() const {
	// to be done
	return true;
}
bool CGeometry::isValid() const {
	// to be done
	return true;
}


bool CGeometry::isEquivalentClass(const CGeometry *other) const {
	if (typeid(*this) == typeid(*other))
				return true;
			else
				return false;
		}

		}
