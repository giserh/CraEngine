//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : PSDE
//  @ File Name : CLineString.h
//  @ Date : 2010/12/20
//  @ Author : 
//
//


#if !defined(_CLINESTRING_H)
#define _CLINESTRING_H

#include "CGeometry.h"
#include "CPoint.h"
namespace Geometry {
class CLineString: public CGeometry {
public:
	CLineString();
	CLineString(const CLineString & ln);
	CLineString(const CCoVecSequence & seq);
	~CLineString();
public:
	void reverse();

	CGeometry* clone() const;
	double getArea() const;
	double getLength() const;
	size_t getNumPoints() const;
	size_t getNumGeometries() const;

	bool equalExact(CGeometry* geom, double eps) const;
	CCoordinate getCoordinateAt(size_t pos) const;
	CCoVecSequence *getCoordinates() const;
	string getGeometryType() const;
	COpenGISType::OPENGIS_TYPE getOGISType() const;

	CPoint* getPointAt(size_t pos);
	CPoint* getStartPoint();
	CPoint* getEndPoint();

	CRectangle getBoundingRect() const;
	bool isSimple() const;
	bool isEmpty() const;
	bool isClosed() const;
	bool isRing() const;
protected:
	CCoVecSequence *mCoord;
};

std::ostream & operator <<(std::ostream &out, const CLineString &ls);

}

#endif  //_CLINESTRING_H
