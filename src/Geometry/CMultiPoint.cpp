//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : PSDE
//  @ File Name : CMultiPoint.cpp
//  @ Date : 2010/12/20
//  @ Author : 
//
//


#include "CMultiPoint.h"
#include "CPoint.h"
namespace Geometry {
CMultiPoint::CMultiPoint() :
	CGeomCollection() {
}
CMultiPoint::CMultiPoint(const CMultiPoint & mp) :
	CGeomCollection(mp) {
}

CMultiPoint::CMultiPoint(vector<CGeometry *> * newPoint) :
	CGeomCollection(newPoint) {

}

CMultiPoint::~CMultiPoint() {

}

CGeometry* CMultiPoint::clone() const {
	return new CMultiPoint(*this);
}

bool CMultiPoint::equalExact(CGeometry* geom, double eps) const {
	if (!isEquivalentClass(geom))
		return false;
	return CGeomCollection::equalExact(geom, eps);
}


string CMultiPoint::getGeometryType() const {
	return "CMultiPoint";
}
CCoordinate CMultiPoint::getCoordinateAt(size_t pos) const {
	CPoint *pPoint = dynamic_cast<CPoint *>((*mGeoms)[pos]);
	return pPoint->getCoordinate();
}
COpenGISType::OPENGIS_TYPE CMultiPoint::getOGISType()const {
	return COpenGISType::OGIS_MULTIPOINT;
}
}
