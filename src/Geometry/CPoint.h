//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : PSDE
//  @ File Name : CPoint.h
//  @ Date : 2010/12/20
//  @ Author : 
//
//


#if !defined(_CPOINT_H)
#define _CPOINT_H

#include <memory>
#include "CGeometry.h"

namespace Geometry {
class CPoint: public CGeometry {
public:
	CPoint();
	CPoint(const CPoint & pt);
	CPoint(const CCoordinate & c);
	CPoint(const double x, const double y, const double z = DOUBLE_NAN);
	~CPoint();
	CGeometry* clone() const;
public:
	double getArea() const;
	double getLength() const;
	size_t getNumPoints() const;
	size_t getNumGeometries() const;
	CCoVecSequence *getCoordinates() const;

	bool equalExact(CGeometry* geom, double eps) const;
	CCoordinate getCoordinate() const;
	CRectangle getBoundingRect() const;

	string getGeometryType() const;
	COpenGISType::OPENGIS_TYPE getOGISType() const;

	bool isSimple() const;
	bool isEmpty() const;
protected:
	CCoVecSequence *mCoord;
};

std::ostream& operator<<(std::ostream& out, const CPoint& pt);
}

#endif  //_CPOINT_H
