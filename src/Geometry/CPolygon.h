//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : PSDE
//  @ File Name : CPolygon.h
//  @ Date : 2010/12/20
//  @ Author : 
//
//


#if !defined(_CPOLYGON_H)
#define _CPOLYGON_H

#include "CGeometry.h"
#include "CLinearRing.h"

namespace Geometry {
class CPolygon: public CGeometry {
public:
	CPolygon();
	CPolygon(const CPolygon & poly);
	CPolygon(CLinearRing * newShell, vector<CGeometry *> * newHole);
	virtual ~CPolygon();
	CGeometry* clone() const;
public:

	size_t getNumHoles() const;
	size_t getNumGeometries() const;
	CLineString * getShell()const;
	CLineString * getHoleAt(size_t pos)const;
	CCoVecSequence *getCoordinates() const;

	double getArea()const;
	double getLength()const;
	size_t getNumPoints()const;
	bool equalExact(CGeometry* geom, double eps)const;


	CRectangle getBoundingRect() const;
	string getGeometryType()const;
	COpenGISType::OPENGIS_TYPE getOGISType() const;
	bool isSimple() const;
	bool isEmpty() const;
protected:
	vector<CGeometry *> *mHole;
	CLinearRing *mShell;
};

std::ostream &operator <<(std::ostream & out, const CPolygon &poly);
}

#endif  //_CPOLYGON_H
