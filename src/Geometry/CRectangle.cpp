//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : PSDE
//  @ File Name : CRectangle.cpp
//  @ Date : 2010/12/20
//  @ Author : 
//
//


#include "CRectangle.h"
#include "Utils.h"
namespace Geometry {
CRectangle::CRectangle() {
	minx = maxx = miny = maxy = 0;
}

CRectangle::CRectangle(double x1, double y1, double x2, double y2) {
	minx = min(x1, x2), maxx = max(x1, x2);
	miny = min(y1, y2), maxy = max(y1, y2);
}

CRectangle::CRectangle(CCoordinate & p1, CCoordinate & p2) {
	CRectangle(p1.x, p1.y, p2.x, p2.y);

}

double CRectangle::getMinX() {
	return minx;
}

double CRectangle::getMinY() {
	return miny;
}

double CRectangle::getMaxX() {
	return maxx;
}

double CRectangle::getMaxY() {
	return maxy;
}

double CRectangle::getArea() {
	return (maxx - minx) * (maxy - miny);
}
bool CRectangle::isEmpty() {
	return minx == 0 && maxx == 0 && miny == 0 && maxy == 0;
}

string CRectangle::AsBox3d() {
	//SetSRID('BOX3D(191232 243117,191232 243119)'::box3d,-1);
	string ret = "'BOX3D(" + Double2Str(minx) + " " + Double2Str(miny);
	ret += "," + Double2Str(maxx) + " " + Double2Str(maxy) + ")'::box3d";
	return ret;

}

void CRectangle::getBoundingBox(double minp[2], double maxp[2]){
	minp[0] = minx, minp[1] = miny;
	maxp[0] = maxx, maxp[1] = maxy;
}
}
